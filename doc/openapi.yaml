openapi: 3.0.2
info:
 title: 'Auth di Express JS'
 version: 0.1.9
 description: 'Assignment week 11'
servers:
  - url: http://localhost:3000
    description: Development server
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: 'Bearer with jwt  token'
  schemas:
    Blog:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
    RegisterUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        role:
          type: string
    LoginUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    BadRequest:
      type: object
      properties:
        message:
          type: string
paths: 
  /blog:
    get:  
      summary: Get all blog
      responses:
        '200':
          description: 'get all blog'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: 
                      array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        content:
                          type: string
  /blog/create:
    post:
      security:
        - bearer: []
      
    #      tags: [Blog] # 這個是用來分組的，可以不加se
      summary: Create blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          description: 'create blog'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      content:
                        type: string
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /blog/id:
    get:
      summary: Get blog by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'get blog by id'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      content:
                        type: string
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /blog/update/id:
    patch:
      summary: Update blog by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          description: 'update blog by id'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      content:
                        type: string
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /blog/delete/id:
    delete:
      summary: Delete blog by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'delete blog by id'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      content:
                        type: string
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /user:
    get:
      summary: Get all user
      responses:
        '200':
          description: 'get all user'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: 
                      array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        username:
                          type: string
                        password:
                          type: string
                        role:
                          type: string
  /register:
    post:
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '200':
          description: 'register user'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      password:
                        type: string
                        minLength: 8
                      role:
                        type: string
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: 'login user'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      password:
                        type: string
                      role:
                        type: string
                      token:
                        type: string
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'  


    